<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Api Repository Exception Language Lines
    |--------------------------------------------------------------------------
    |
    | The following language lines contain the default error
    | messages used by the exception class
    |
    */

    'findById'                              => __('exceptions.repository.user.user.findById'),
    'findByEmail'                           => __('exceptions.repository.user.user.findByEmail'),
    'findByIdForAdmin'                      => __('exceptions.repository.user.user.findByIdForAdmin'),
    'getAll'                                => __('exceptions.repository.user.user.getAll'),
    'getAllBySearch'                        => __('exceptions.repository.user.user.getAllBySearch'),
    'getAllForAdminBySearch'                => __('exceptions.repository.user.user.getAllForAdminBySearch'),
    'getAllExcept'                          => __('exceptions.repository.user.user.getAllExcept'),
    'getUsersByIds'                         => __('exceptions.repository.user.user.getUsersByIds'),
    'getAllPaginated'                       => __('exceptions.repository.user.user.getAllPaginated'),
    'getAllBySearchPaginated'               => __('exceptions.repository.user.user.getAllBySearchPaginated'),
    'getWithGlobalSearchByLimit'            => __('exceptions.repository.user.user.getWithGlobalSearchByLimit'),
    'getByEmail'                            => __('exceptions.repository.user.user.getByEmail'),
    'getRecentVisits'                       => __('exceptions.repository.user.user.getRecentVisits'),
    'getUserFullProfile'                    => __('exceptions.repository.user.user.getUserFullProfile'),
    'getUserDashboardProfile'               => __('exceptions.repository.user.user.getUserDashboardProfile'),
    'getUserSubscriptionsIds'               => __('exceptions.repository.user.user.getUserSubscriptionsIds'),
    'getUserSubscribersIds'                 => __('exceptions.repository.user.user.getUserSubscribersIds'),
    'getUserSubscriptionsPaginated'         => __('exceptions.repository.user.user.getUserSubscriptionsPaginated'),
    'getUserSubscriptionsBySearchPaginated' => __('exceptions.repository.user.user.getUserSubscriptionsBySearchPaginated'),
    'getUserSubscribersPaginated'           => __('exceptions.repository.user.user.getUserSubscribersPaginated'),
    'getUserSubscribersBySearchPaginated'   => __('exceptions.repository.user.user.getUserSubscribersBySearchPaginated'),
    'getBlockedUsersBySearch'               => __('exceptions.repository.user.user.getBlockedUsersBySearch'),
    'checkEmailExistence'                   => __('exceptions.repository.user.user.checkEmailExistence'),
    'checkEmailUniquenessForUpdate'         => __('exceptions.repository.user.user.checkEmailUniquenessForUpdate'),
    'store'                                 => __('exceptions.repository.user.user.store'),
    'storeVisit'                            => __('exceptions.repository.user.user.storeVisit'),
    'update'                                => __('exceptions.repository.user.user.update'),
    'updateEmail'                           => __('exceptions.repository.user.user.updateEmail'),
    'updatePassword'                        => __('exceptions.repository.user.user.updatePassword'),
    'updateAccountStatus'                   => __('exceptions.repository.user.user.updateAccountStatus'),
    'updateLoginAttempts'                   => __('exceptions.repository.user.user.updateLoginAttempts'),
    'updateEmailAttempts'                   => __('exceptions.repository.user.user.updateEmailAttempts'),
    'updatePasswordAttempts'                => __('exceptions.repository.user.user.updatePasswordAttempts'),
    'setPasswordResetToken'                 => __('exceptions.repository.user.user.setPasswordResetToken'),
    'establishNextLoginAttempt'             => __('exceptions.repository.user.user.establishNextLoginAttempt'),
    'establishNextEmailAttempt'             => __('exceptions.repository.user.user.establishNextEmailAttempt'),
    'establishNextPasswordAttempt'          => __('exceptions.repository.user.user.establishNextPasswordAttempt'),
    'attachPayoutMethod'                    => __('exceptions.repository.user.user.attachPayoutMethod'),
    'updatePayoutMethodValues'              => __('exceptions.repository.user.user.updatePayoutMethodValues'),
    'verifyEmail'                           => __('exceptions.repository.user.user.verifyEmail'),
    'detachPayoutMethod'                    => __('exceptions.repository.user.user.detachPayoutMethod'),
    'attachSubscription'                    => __('exceptions.repository.user.user.attachSubscription'),
    'attachSubscriptions'                   => __('exceptions.repository.user.user.attachSubscriptions'),
    'detachSubscription'                    => __('exceptions.repository.user.user.detachSubscription'),
    'detachSubscriptions'                   => __('exceptions.repository.user.user.detachSubscriptions'),
    'attachFavoriteVybe'                    => __('exceptions.repository.user.user.attachFavoriteVybe'),
    'attachFavoriteVybes'                   => __('exceptions.repository.user.user.attachFavoriteVybes'),
    'detachFavoriteVybe'                    => __('exceptions.repository.user.user.detachFavoriteVybe'),
    'detachFavoriteVybes'                   => __('exceptions.repository.user.user.detachFavoriteVybes'),
    'attachFavoriteActivity'                => __('exceptions.repository.user.user.attachFavoriteActivity'),
    'attachFavoriteActivities'              => __('exceptions.repository.user.user.attachFavoriteActivities'),
    'detachFavoriteActivity'                => __('exceptions.repository.user.user.detachFavoriteActivity'),
    'detachFavoriteActivities'              => __('exceptions.repository.user.user.detachFavoriteActivities'),
    'attachSubscriber'                      => __('exceptions.repository.user.user.attachSubscriber'),
    'attachSubscribers'                     => __('exceptions.repository.user.user.attachSubscribers'),
    'detachSubscriber'                      => __('exceptions.repository.user.user.detachSubscriber'),
    'detachSubscribers'                     => __('exceptions.repository.user.user.detachSubscribers'),
    'attachVisitedUser'                     => __('exceptions.repository.user.user.attachVisitedUser'),
    'attachVisitedUsers'                    => __('exceptions.repository.user.user.attachVisitedUsers'),
    'detachVisitedUser'                     => __('exceptions.repository.user.user.detachVisitedUser'),
    'detachVisitedUsers'                    => __('exceptions.repository.user.user.detachVisitedUsers'),
    'attachRole'                            => __('exceptions.repository.user.user.attachRole'),
    'attachRoles'                           => __('exceptions.repository.user.user.attachRoles'),
    'detachRole'                            => __('exceptions.repository.user.user.detachRole'),
    'detachRoles'                           => __('exceptions.repository.user.user.detachRoles'),
    'attachBlockedUser'                     => __('exceptions.repository.user.user.attachBlockedUser'),
    'attachBlockedUsers'                    => __('exceptions.repository.user.user.attachBlockedUsers'),
    'detachBlockedUser'                     => __('exceptions.repository.user.user.detachBlockedUser'),
    'detachBlockUsers'                      => __('exceptions.repository.user.user.detachBlockUsers'),
    'delete'                                => __('exceptions.repository.user.user.delete'),
    'forceDelete'                           => __('exceptions.repository.user.user.forceDelete'),
    'getAllForAdminPaginated'               => __('exceptions.repository.user.user.getAllForAdminPaginated'),
    'getAllForAdmin'                        => 'Getting all users for admin error.',
    'getTopCreators'                        => __('exceptions.repository.user.user.getTopCreators')
];